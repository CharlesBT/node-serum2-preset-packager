name: Build & Publish (on tag)

permissions:
  contents: write          # nécessaire pour créer la Release
  packages: write          # nécessaire pour publier sur npm

env:
  NODE_VERSION: 20.x       # version de Node à utiliser
  PNPM_VERSION: 10         # version de pnpm à utiliser

# ─── Déclencheur : push d’un tag ──────────────────────────────────────────────
on:
  push:
    tags:
      - 'v*.*.*'           # ex. v1.2.3   (adapter si besoin)

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # 1. Récupération du dépôt
      - name: Check out repository
        uses: actions/checkout@v4

      # 2. Node + pnpm
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      # 3. Dépendances, build, tests
      - name: Install dependencies
        run: pnpm install

      - name: TypeScript type-check
        run: pnpm run tc

      - name: Build
        run: pnpm run build

      - name: Test
        run: pnpm run test:ci

      # 4. Publication npm
      - name: Publish to npm
        run: pnpm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # 5. Création de la Release GitHub (le tag existe déjà)
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}   # v1.2.3
          name: ${{ github.ref_name }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}