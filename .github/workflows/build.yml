name: Build & Publish

permissions:
  contents: write
  packages: write

env:
  NODE_VERSION: 20.x # set this to the node version to use
  PNPM_VERSION: 10 # set this to the node version to use

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node.js version ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Install PNPM
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install packages
        run: pnpm install

      - name: Typescript type check
        run: pnpm run tc

      - name: Build
        run: pnpm run build

      - name: Test
        run: pnpm run test:ci

      - name: Publish to NPM registry
        run: pnpm publish --access public
        env:
          NODE_AUTH_TOKEN:
            ${{ secrets.NPM_TOKEN }}

            # ─── Derive version number from package.json ─────────────────────
      - name: Extract package version
        id: pkg
        run: echo "version=$(node -p 'require(\"./package.json\").version')" >> $GITHUB_OUTPUT
        shell: bash

      # ─── Tag the commit with vX.Y.Z and push it ───────────────────────
      - name: Create and push git tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
          git tag -a "v${{ steps.pkg.outputs.version }}" -m "Release v${{ steps.pkg.outputs.version }}"
          git push origin "v${{ steps.pkg.outputs.version }}"

      # ─── Create the GitHub Release page ───────────────────────────────
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: 'v${{ steps.pkg.outputs.version }}'
          name: 'v${{ steps.pkg.outputs.version }}'
          generate_release_notes: true # auto-generate changelog text
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
